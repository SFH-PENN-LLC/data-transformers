import {DataTransformer} from "../types";
import {DateStandardizer} from "./baseDataTransformer";
import {DataUtils} from "../utils/DataUtils";
import {FieldNormalizer} from "../utils/FieldNormalizer";

/**
 * Google —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–µ—Ä —Å –∞–≥—Ä–µ–≥–∞—Ü–∏–µ–π
 */
export class GoogleDataTransformer implements DataTransformer {
	private dateStandardizer: DateStandardizer;

	constructor() {
		this.dateStandardizer = new DateStandardizer({
			preserveRanges: false,
			deleteOriginalFields: true
		});
	}

	transform(records: Record<string, any>[]): Record<string, any>[] {
		console.log('üîÑ Applying Google Ads transformations...');

		const transformedRecords = records.map(record => this.transformGoogleSpecific(record));
		return this.dateStandardizer.standardizeMany(transformedRecords);
	}

	private transformGoogleSpecific(record: Record<string, any>): Record<string, any> {
		// –°–Ω–∞—á–∞–ª–∞ –Ω–æ—Ä–º–∞–ª–∏–∑—É–µ–º –≤—Å–µ –ø–æ–ª—è –∏–∑ CamelCase –≤ snake_case
		const transformed = FieldNormalizer.normalize(record);

		// ===== –§–ò–ù–ê–ù–°–û–í–´–ï –ü–û–õ–Ø (–º–∏–∫—Ä–æ–µ–¥–∏–Ω–∏—Ü—ã ‚Üí –æ—Å–Ω–æ–≤–Ω—ã–µ –µ–¥–∏–Ω–∏—Ü—ã) =====
		const MICROS_TO_MAIN = 1_000_000;
		const microFields = ['cost_micros', 'average_cpc_micros', 'average_cpm_micros'];
		
		microFields.forEach(microField => {
			if (transformed[microField] !== undefined) {
				const baseField = microField.replace('_micros', '');
				// cost_micros ‚Üí cost, average_cpc_micros ‚Üí average_cpc
				transformed[baseField] = DataUtils.safeNumber(transformed[microField]) / MICROS_TO_MAIN;
				delete transformed[microField];
			}
		});

		// Google Ads API –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç cost_micros, –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ cost –¥–ª—è —É–Ω–∏—Ñ–∏–∫–∞—Ü–∏–∏ —Å –¥—Ä—É–≥–∏–º–∏ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞–º–∏

		// ===== –ú–ï–¢–†–ò–ö–ò –í –ß–ò–°–õ–ê =====
		const numericFields = ['impressions', 'clicks', 'conversions'];
		numericFields.forEach(field => {
			if (transformed[field] !== undefined) {
				transformed[field] = DataUtils.safeNumber(transformed[field]);
			}
		});

		// ===== –ú–ï–¢–ê–î–ê–ù–ù–´–ï =====
		transformed.data_source = 'google_ads';
		transformed.currency = 'USD'; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é, –º–æ–∂–µ—Ç –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞—Ç—å—Å—è

		return transformed;
	}
}
